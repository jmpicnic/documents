---
name: mkdocs-publish
on: 
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  mkdocs-build:
    name: Build mkdocs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ubuntu Packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          version: 1.0
          packages: graphviz texlive pandoc ghostscript
          # execute_install_scripts: true
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: '17'
      - name: get the latest plantuml
        run: |
          wget -q https://github.com/plantuml/plantuml/releases/download/v1.2023.12/plantuml-1.2023.12.jar
          mv plantuml-1.2023.12.jar plantuml.jar
      - name: Check dot installation
        run: |
          which dot
          sudo dot -c
          java -Djava.awt.headless=true -jar plantuml.jar -testdot
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: pip
          cache-dependency-path: requirements.txt
      - name: Install Python packages
        run: pip install -r requirements.txt
      - name: Check Versions
        run: |
          lsb_release -a
          python --version
          java --version
          mkdocs --version
          pandoc --version
          gs --version
          latex --version
          dot --version
          java -Djava.awt.headless=true -jar plantuml.jar -version
      - name: run mkdocs
        run: |
          mkdocs build -s -f mkdocs/mkdocs-ci-gha.yml
      - name: Fix permissions
        run: |
          chmod -c -R +rX "site/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2 
        with:
          path: mkdocs/site   
  deploy:
    # Add a dependency to the upload job
    needs: mkdocs-build
    # Specify runner + deployment step
    runs-on: ubuntu-latest

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 # or the latest "vX.X.X" version tag for this action